# cribbed from deploy-treasury.yml from dapp-treasury
# TODO: cache node modules?

name: Deploy Dapp UI

# run CI on pushes to beta, and on all PRs (even the ones that target other
# branches)

on:
  push:
    branches: [ beta ]
  pull_request:

jobs:
  # Build everything we can and share in a cache.
  deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Checkout agoric-sdk
      uses: actions/checkout@v2
      with:
        repository: Agoric/agoric-sdk
        path: agoric-sdk
    - name: yarn install in agoric-sdk
      run: yarn install
      working-directory: ./agoric-sdk
    - name: yarn build in agoric-sdk
      run: yarn build
      working-directory: ./agoric-sdk
    - name: yarn link agoric cli
      run: |
        yarn link-cli ~/bin/agoric
        echo "/home/runner/bin" >> $GITHUB_PATH
      working-directory: ./agoric-sdk

    - name: Check out dapp
      uses: actions/checkout@v2
      with:
        path: dapp
    - name: Agoric install in dapp
      run: agoric install
      working-directory: ./dapp
    - name: yarn build in dapp
      run: yarn build
      working-directory: ./dapp

    - name: cache build outputs
      uses: actions/cache@v1
      with:
        path: .
        key: ${{ runner.os }}-14.x-built-${{ github.sha }}

#  get-deployments:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        path: dapp
#    - id: set-deployments
#      # Get only the directories present in dapp/ui/deploy
#      run: echo "::set-output name=deployments::$(ls -d dapp/ui/deploy/*/ | jq -R -s -c 'split("/\n")[:-1]')"
#    outputs:
#      deployments: ${{ steps.set-deployments.outputs.deployments }}

  deploy:
    needs: deps # [deps, get-deployments]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deployment: [dapp/ui/deploy] # ${{fromJson(needs.get-deployments.outputs.deployments)}}
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: restore built files
      uses: actions/cache@v1
      with:
        path: .
        key: ${{ runner.os }}-14.x-built-${{ github.sha }}
    - name: Configure dapp
      run: |
        echo "NETLIFY_SITE_ID=$(cat "${{ matrix.deployment }}/NETLIFY_SITE_ID")" >> $GITHUB_ENV
        tar -C "${{ matrix.deployment }}" -cf - src | tar -C dapp/ui -xvf -
    - name: yarn build:react in dapp ui
      run: yarn build:react
      working-directory: ./dapp/ui

    - name: Deploy via Netlify
      uses: nwtgck/actions-netlify@v1.1
      with:
        # Production deployment if a commit to beta.
        production-deploy: ${{ github.ref == 'refs/heads/beta' }}
        publish-dir: dapp/ui/build
        github-token: ${{ secrets.GITHUB_TOKEN }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
